syntax = "proto3";

package telemetry;

import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";

message Telemetry {
  google.protobuf.Timestamp timestamp = 1;
  google.protobuf.Timestamp updated_timestamp = 2;
  Request request = 3;
  Response response = 4;
  string sourceAddress = 5;
  string destinationAddress = 6;
  string destinationNamespace = 7;
}

message Request {
  int64 context_id = 1;
  string authority = 2;
  string path = 3;
  string method = 4;
  string scheme = 5;
  string request_id = 6;
  // Todo: Do we really need `user_agent`?
  optional string user_agent = 7;
}

message Response {
  string status = 1;
  string content_length = 2;
  string content_type = 3;
}

service TelemetryService {
  rpc GetTelemetry(google.protobuf.Empty) returns (stream Telemetry);
  // Todo: Change return type to something more meaningful
  rpc SendTelemetry(Telemetry) returns (Telemetry);
}